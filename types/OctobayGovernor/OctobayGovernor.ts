// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AwardGovernanceTokensEvent extends ethereum.Event {
  get params(): AwardGovernanceTokensEvent__Params {
    return new AwardGovernanceTokensEvent__Params(this);
  }
}

export class AwardGovernanceTokensEvent__Params {
  _event: AwardGovernanceTokensEvent;

  constructor(event: AwardGovernanceTokensEvent) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenAddr(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class DepartmentCreatedEvent extends ethereum.Event {
  get params(): DepartmentCreatedEvent__Params {
    return new DepartmentCreatedEvent__Params(this);
  }
}

export class DepartmentCreatedEvent__Params {
  _event: DepartmentCreatedEvent;

  constructor(event: DepartmentCreatedEvent) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get projectId(): string {
    return this._event.parameters[1].value.toString();
  }

  get newProposalShare(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get minQuorum(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get tokenName(): string {
    return this._event.parameters[4].value.toString();
  }

  get tokenSymbol(): string {
    return this._event.parameters[5].value.toString();
  }

  get tokenAddress(): Address {
    return this._event.parameters[6].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposalCreatedEvent extends ethereum.Event {
  get params(): ProposalCreatedEvent__Params {
    return new ProposalCreatedEvent__Params(this);
  }
}

export class ProposalCreatedEvent__Params {
  _event: ProposalCreatedEvent;

  constructor(event: ProposalCreatedEvent) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get discussionId(): string {
    return this._event.parameters[1].value.toString();
  }

  get startDate(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get quorum(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get creator(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get proposalId(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get snapshotId(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class UpdateGovTokenParamsEvent extends ethereum.Event {
  get params(): UpdateGovTokenParamsEvent__Params {
    return new UpdateGovTokenParamsEvent__Params(this);
  }
}

export class UpdateGovTokenParamsEvent__Params {
  _event: UpdateGovTokenParamsEvent;

  constructor(event: UpdateGovTokenParamsEvent) {
    this._event = event;
  }

  get govToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newProposalShare(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get minQuorum(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class UpdatedProjectId extends ethereum.Event {
  get params(): UpdatedProjectId__Params {
    return new UpdatedProjectId__Params(this);
  }
}

export class UpdatedProjectId__Params {
  _event: UpdatedProjectId;

  constructor(event: UpdatedProjectId) {
    this._event = event;
  }

  get oldProjectId(): string {
    return this._event.parameters[0].value.toString();
  }

  get newProjectId(): string {
    return this._event.parameters[1].value.toString();
  }

  get tokenAddr(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class VoteCastEvent extends ethereum.Event {
  get params(): VoteCastEvent__Params {
    return new VoteCastEvent__Params(this);
  }
}

export class VoteCastEvent__Params {
  _event: VoteCastEvent;

  constructor(event: VoteCastEvent) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proposalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get discussionId(): string {
    return this._event.parameters[2].value.toString();
  }

  get vote(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get voter(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class OctobayGovernor__governorsByTokenAddrResult {
  value0: boolean;
  value1: Address;
  value2: BigInt;
  value3: i32;
  value4: i32;

  constructor(
    value0: boolean,
    value1: Address,
    value2: BigInt,
    value3: i32,
    value4: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    return map;
  }
}

export class OctobayGovernor extends ethereum.SmartContract {
  static bind(address: Address): OctobayGovernor {
    return new OctobayGovernor("OctobayGovernor", address);
  }

  governorsByTokenAddr(
    param0: Address
  ): OctobayGovernor__governorsByTokenAddrResult {
    let result = super.call(
      "governorsByTokenAddr",
      "governorsByTokenAddr(address):(bool,address,uint256,uint16,uint16)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new OctobayGovernor__governorsByTokenAddrResult(
      result[0].toBoolean(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toI32(),
      result[4].toI32()
    );
  }

  try_governorsByTokenAddr(
    param0: Address
  ): ethereum.CallResult<OctobayGovernor__governorsByTokenAddrResult> {
    let result = super.tryCall(
      "governorsByTokenAddr",
      "governorsByTokenAddr(address):(bool,address,uint256,uint16,uint16)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OctobayGovernor__governorsByTokenAddrResult(
        value[0].toBoolean(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toI32(),
        value[4].toI32()
      )
    );
  }

  octobay(): Address {
    let result = super.call("octobay", "octobay():(address)", []);

    return result[0].toAddress();
  }

  try_octobay(): ethereum.CallResult<Address> {
    let result = super.tryCall("octobay", "octobay():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  octobayGovNFT(): Address {
    let result = super.call("octobayGovNFT", "octobayGovNFT():(address)", []);

    return result[0].toAddress();
  }

  try_octobayGovNFT(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "octobayGovNFT",
      "octobayGovNFT():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  projectsByToken(param0: Address): string {
    let result = super.call(
      "projectsByToken",
      "projectsByToken(address):(string)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toString();
  }

  try_projectsByToken(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "projectsByToken",
      "projectsByToken(address):(string)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokensByProjectId(param0: string, param1: BigInt): Address {
    let result = super.call(
      "tokensByProjectId",
      "tokensByProjectId(string,uint256):(address)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_tokensByProjectId(
    param0: string,
    param1: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokensByProjectId",
      "tokensByProjectId(string,uint256):(address)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposalState(_govToken: Address, _proposalId: BigInt): i32 {
    let result = super.call(
      "proposalState",
      "proposalState(address,uint256):(uint8)",
      [
        ethereum.Value.fromAddress(_govToken),
        ethereum.Value.fromUnsignedBigInt(_proposalId)
      ]
    );

    return result[0].toI32();
  }

  try_proposalState(
    _govToken: Address,
    _proposalId: BigInt
  ): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "proposalState",
      "proposalState(address,uint256):(uint8)",
      [
        ethereum.Value.fromAddress(_govToken),
        ethereum.Value.fromUnsignedBigInt(_proposalId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  createToken(_name: string, _symbol: string): Address {
    let result = super.call(
      "createToken",
      "createToken(string,string):(address)",
      [ethereum.Value.fromString(_name), ethereum.Value.fromString(_symbol)]
    );

    return result[0].toAddress();
  }

  try_createToken(
    _name: string,
    _symbol: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createToken",
      "createToken(string,string):(address)",
      [ethereum.Value.fromString(_name), ethereum.Value.fromString(_symbol)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _octobayGovNFT(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetOctobayCall extends ethereum.Call {
  get inputs(): SetOctobayCall__Inputs {
    return new SetOctobayCall__Inputs(this);
  }

  get outputs(): SetOctobayCall__Outputs {
    return new SetOctobayCall__Outputs(this);
  }
}

export class SetOctobayCall__Inputs {
  _call: SetOctobayCall;

  constructor(call: SetOctobayCall) {
    this._call = call;
  }

  get _octobay(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOctobayCall__Outputs {
  _call: SetOctobayCall;

  constructor(call: SetOctobayCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class CreateGovernorAndSetTokenCall extends ethereum.Call {
  get inputs(): CreateGovernorAndSetTokenCall__Inputs {
    return new CreateGovernorAndSetTokenCall__Inputs(this);
  }

  get outputs(): CreateGovernorAndSetTokenCall__Outputs {
    return new CreateGovernorAndSetTokenCall__Outputs(this);
  }
}

export class CreateGovernorAndSetTokenCall__Inputs {
  _call: CreateGovernorAndSetTokenCall;

  constructor(call: CreateGovernorAndSetTokenCall) {
    this._call = call;
  }

  get _creator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _projectId(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _newProposalShare(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get _minQuorum(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _govToken(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class CreateGovernorAndSetTokenCall__Outputs {
  _call: CreateGovernorAndSetTokenCall;

  constructor(call: CreateGovernorAndSetTokenCall) {
    this._call = call;
  }
}

export class CreateGovernorCall extends ethereum.Call {
  get inputs(): CreateGovernorCall__Inputs {
    return new CreateGovernorCall__Inputs(this);
  }

  get outputs(): CreateGovernorCall__Outputs {
    return new CreateGovernorCall__Outputs(this);
  }
}

export class CreateGovernorCall__Inputs {
  _call: CreateGovernorCall;

  constructor(call: CreateGovernorCall) {
    this._call = call;
  }

  get _creator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _newProposalShare(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get _minQuorum(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class CreateGovernorCall__Outputs {
  _call: CreateGovernorCall;

  constructor(call: CreateGovernorCall) {
    this._call = call;
  }
}

export class UpdateGovTokenParamsCall extends ethereum.Call {
  get inputs(): UpdateGovTokenParamsCall__Inputs {
    return new UpdateGovTokenParamsCall__Inputs(this);
  }

  get outputs(): UpdateGovTokenParamsCall__Outputs {
    return new UpdateGovTokenParamsCall__Outputs(this);
  }
}

export class UpdateGovTokenParamsCall__Inputs {
  _call: UpdateGovTokenParamsCall;

  constructor(call: UpdateGovTokenParamsCall) {
    this._call = call;
  }

  get _govToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newProposalShare(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _minQuorum(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get _msgSender(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class UpdateGovTokenParamsCall__Outputs {
  _call: UpdateGovTokenParamsCall;

  constructor(call: UpdateGovTokenParamsCall) {
    this._call = call;
  }
}

export class CreateProposalCall extends ethereum.Call {
  get inputs(): CreateProposalCall__Inputs {
    return new CreateProposalCall__Inputs(this);
  }

  get outputs(): CreateProposalCall__Outputs {
    return new CreateProposalCall__Outputs(this);
  }
}

export class CreateProposalCall__Inputs {
  _call: CreateProposalCall;

  constructor(call: CreateProposalCall) {
    this._call = call;
  }

  get _govToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _discussionId(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _startDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _endDate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _quorum(): i32 {
    return this._call.inputValues[4].value.toI32();
  }
}

export class CreateProposalCall__Outputs {
  _call: CreateProposalCall;

  constructor(call: CreateProposalCall) {
    this._call = call;
  }
}

export class CastVoteCall extends ethereum.Call {
  get inputs(): CastVoteCall__Inputs {
    return new CastVoteCall__Inputs(this);
  }

  get outputs(): CastVoteCall__Outputs {
    return new CastVoteCall__Outputs(this);
  }
}

export class CastVoteCall__Inputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }

  get _govToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _vote(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class CastVoteCall__Outputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }
}

export class CreateTokenCall extends ethereum.Call {
  get inputs(): CreateTokenCall__Inputs {
    return new CreateTokenCall__Inputs(this);
  }

  get outputs(): CreateTokenCall__Outputs {
    return new CreateTokenCall__Outputs(this);
  }
}

export class CreateTokenCall__Inputs {
  _call: CreateTokenCall;

  constructor(call: CreateTokenCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateTokenCall__Outputs {
  _call: CreateTokenCall;

  constructor(call: CreateTokenCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SetTokenForProjectIdCall extends ethereum.Call {
  get inputs(): SetTokenForProjectIdCall__Inputs {
    return new SetTokenForProjectIdCall__Inputs(this);
  }

  get outputs(): SetTokenForProjectIdCall__Outputs {
    return new SetTokenForProjectIdCall__Outputs(this);
  }
}

export class SetTokenForProjectIdCall__Inputs {
  _call: SetTokenForProjectIdCall;

  constructor(call: SetTokenForProjectIdCall) {
    this._call = call;
  }

  get _govToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _projectId(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTokenForProjectIdCall__Outputs {
  _call: SetTokenForProjectIdCall;

  constructor(call: SetTokenForProjectIdCall) {
    this._call = call;
  }
}

export class UpdateProjectIdCall extends ethereum.Call {
  get inputs(): UpdateProjectIdCall__Inputs {
    return new UpdateProjectIdCall__Inputs(this);
  }

  get outputs(): UpdateProjectIdCall__Outputs {
    return new UpdateProjectIdCall__Outputs(this);
  }
}

export class UpdateProjectIdCall__Inputs {
  _call: UpdateProjectIdCall;

  constructor(call: UpdateProjectIdCall) {
    this._call = call;
  }

  get _govToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newProjectId(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProjectIdCall__Outputs {
  _call: UpdateProjectIdCall;

  constructor(call: UpdateProjectIdCall) {
    this._call = call;
  }
}

export class AwardGovernanceTokensCall extends ethereum.Call {
  get inputs(): AwardGovernanceTokensCall__Inputs {
    return new AwardGovernanceTokensCall__Inputs(this);
  }

  get outputs(): AwardGovernanceTokensCall__Outputs {
    return new AwardGovernanceTokensCall__Outputs(this);
  }
}

export class AwardGovernanceTokensCall__Inputs {
  _call: AwardGovernanceTokensCall;

  constructor(call: AwardGovernanceTokensCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get payoutEth(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get tokenAddr(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class AwardGovernanceTokensCall__Outputs {
  _call: AwardGovernanceTokensCall;

  constructor(call: AwardGovernanceTokensCall) {
    this._call = call;
  }
}
